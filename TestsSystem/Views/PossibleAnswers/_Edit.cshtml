@model TestsSystem.Models.EditPossibleAnswerViewModels

<div class="modal-header" style="background-color : lightgreen">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <h4 class="modal-title"><strong>Edit selected possible answer</strong></h4>
</div>
@using (Html.BeginForm("Edit", "PossibleAnswers", FormMethod.Post))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.PosAnsID)
            @Html.HiddenFor(model => model.TestID)

            <div class="form-group">
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.isCorrect, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-2" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.isCorrect, (IEnumerable<SelectListItem>)(ViewBag.Options), new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer" style="background-color :  whitesmoke">
        <input class="btn btn-primary" type="submit" value="Edit" />
        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
    </div>
}
